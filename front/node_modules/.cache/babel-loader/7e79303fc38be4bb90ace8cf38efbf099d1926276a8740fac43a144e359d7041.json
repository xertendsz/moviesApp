{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imane\\\\OneDrive\\\\Desktop\\\\CS\\\\Web\\\\movies\\\\front\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [shows, setShows] = useState([]);\n  const [input, setInput] = useState();\n  const [title, setTitle] = useState(null);\n  const [plot, setPlot] = useState(null);\n  const [poster, setPoster] = useState(null);\n  const [released, setReleased] = useState(null);\n  const [runtime, setRuntime] = useState(null);\n  const [director, setDirector] = useState(null);\n  const [genre, setGenre] = useState(null);\n  const [writer, setWriter] = useState(null);\n  const [actors, setActors] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [imdbRating, setImdbRating] = useState(null);\n  const [type, setType] = useState(null);\n  const [year, setYear] = useState(null);\n  const fetchMovies = query => {\n    fetch(`http://www.omdbapi.com/?s=${query}&apikey=3244219b`).then(response => response.json()).then(data => {\n      if (data.Search) {\n        const lastFiveMovies = data.Search.slice(-5);\n        setShows(lastFiveMovies);\n      }\n    });\n  };\n  const handleInput = e => {\n    const query = e.target.value;\n    setInput(query);\n    fetchMovies(query);\n  };\n\n  /*fetch(`http://www.omdbapi.com/?t=${show}&apikey=3244219b`)\r\n      .then(response => response.json())\r\n      .then(data => { console.log(data)\r\n          setTitle(data.Title)\r\n          setPlot(data.Plot)\r\n          setPoster(data.Poster)\r\n          setReleased(data.Released)\r\n          setRuntime(data.Runtime)\r\n          setDirector(data.Director)\r\n          setGenre(data.Genre)\r\n          setWriter(data.Writer)\r\n          setActors(data.Actors)\r\n          setCountry(data.Country)\r\n          setImdbRating(data.imdbRating)\r\n          setType(data.Type)\r\n          setYear(data.Year)\r\n          console.log(\"SHOW NAME: \", show)\r\n      })*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchField\",\n        type: \"text\",\n        onChange: handleInput,\n        name: \"findMovie\",\n        value: input,\n        placeholder: \"Find a show\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), input && shows.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: shows.map((show, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: show.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: show.Runtime ? show.Runtime.split(' ') : \"null\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: type ? type[0].toUpperCase() + type.slice(1, type.length) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: show.Poster,\n              width: \"60px\",\n              height: \"80px\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"bZvEf0sFnyqOn9aOOb3dlRLarn4=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","shows","setShows","input","setInput","title","setTitle","plot","setPlot","poster","setPoster","released","setReleased","runtime","setRuntime","director","setDirector","genre","setGenre","writer","setWriter","actors","setActors","country","setCountry","imdbRating","setImdbRating","type","setType","year","setYear","fetchMovies","query","fetch","then","response","json","data","Search","lastFiveMovies","slice","handleInput","e","target","value","children","className","onChange","name","placeholder","id","fileName","_jsxFileName","lineNumber","columnNumber","length","map","show","index","Title","Runtime","split","toUpperCase","src","Poster","width","height","alt","_c","$RefreshReg$"],"sources":["C:/Users/Imane/OneDrive/Desktop/CS/Web/movies/front/src/pages/home.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function Home() {\r\n    const [shows, setShows] = useState([])\r\n    const [input, setInput] = useState()\r\n    const [title, setTitle] = useState(null)\r\n    const [plot, setPlot] = useState(null)\r\n    const [poster, setPoster] = useState(null)\r\n    const [released, setReleased] = useState(null)\r\n    const [runtime, setRuntime] = useState(null)\r\n    const [director, setDirector] = useState(null)\r\n    const [genre, setGenre] = useState(null)\r\n    const [writer, setWriter] = useState(null)\r\n    const [actors, setActors] = useState(null)\r\n    const [country, setCountry] = useState(null)\r\n    const [imdbRating, setImdbRating] = useState(null)\r\n    const [type, setType] =useState(null)\r\n    const [year, setYear] = useState(null)\r\n\r\n    const fetchMovies = (query) => {\r\n        fetch(`http://www.omdbapi.com/?s=${query}&apikey=3244219b`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.Search) {\r\n                    const lastFiveMovies = data.Search.slice(-5);\r\n                    setShows(lastFiveMovies);\r\n                }\r\n            });\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        const query = e.target.value;\r\n        setInput(query);\r\n        fetchMovies(query);\r\n    }\r\n\r\n    /*fetch(`http://www.omdbapi.com/?t=${show}&apikey=3244219b`)\r\n        .then(response => response.json())\r\n        .then(data => { console.log(data)\r\n            setTitle(data.Title)\r\n            setPlot(data.Plot)\r\n            setPoster(data.Poster)\r\n            setReleased(data.Released)\r\n            setRuntime(data.Runtime)\r\n            setDirector(data.Director)\r\n            setGenre(data.Genre)\r\n            setWriter(data.Writer)\r\n            setActors(data.Actors)\r\n            setCountry(data.Country)\r\n            setImdbRating(data.imdbRating)\r\n            setType(data.Type)\r\n            setYear(data.Year)\r\n            console.log(\"SHOW NAME: \", show)\r\n        })*/\r\n  return (\r\n    <div>\r\n        <div className=\"movie\">\r\n            <input className='searchField' type=\"text\" onChange={handleInput} name=\"findMovie\" value={input} placeholder='Find a show' id=\"\" />\r\n            {input && shows.length > 0?\r\n                <div>\r\n                    {shows.map((show, index) => (\r\n                        <div className='scroll'>\r\n                            <div className=\"text\">\r\n                                <h4>{show.Title}</h4>\r\n                                <div className=\"small\">\r\n                                    <p>{year}</p>\r\n                                    <p>o</p>\r\n                                    <p>{show.Runtime?show.Runtime.split(' '):\"null\"}</p>\r\n                                    <p>o</p>\r\n                                    <p>{type? type[0].toUpperCase() + type.slice(1, type.length) : null}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"image\">\r\n                                <img src={show.Poster} width=\"60px\" height=\"80px\" alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        ))\r\n                    }\r\n                </div> \r\n                : null\r\n            }\r\n            \r\n            {/*<div>\r\n                {input?\r\n                    <>\r\n                    <h3>{title}</h3>\r\n                    <p>{type}</p>\r\n                    <p>{released}</p>\r\n                    <p>{runtime}</p>\r\n                    <p>IMDB RATING: {imdbRating}</p>\r\n                    <p>Your Rating</p>\r\n                    <img src={poster} alt=\"\" />\r\n                    <p>{genre}</p>\r\n                    <p>Director: {director}</p>\r\n                    <p>Writes: {writer}</p>\r\n                    <p>Actors: {actors}</p>\r\n                    <p>{plot}</p>\r\n                    <p>Country: {country}</p>\r\n                    </> \r\n                    : null\r\n                }\r\n            </div>*/}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}