{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imane\\\\OneDrive\\\\Desktop\\\\CS\\\\Web\\\\movies\\\\front\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [showName, setShowName] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [title, setTitle] = useState(null);\n  const [plot, setPlot] = useState(null);\n  const [poster, setPoster] = useState(null);\n  const [released, setReleased] = useState(null);\n  const [runtime, setRuntime] = useState(null);\n  const [director, setDirector] = useState(null);\n  const [genre, setGenre] = useState(null);\n  const [writer, setWriter] = useState(null);\n  const [actors, setActors] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [imdbRating, setImdbRating] = useState(null);\n  const [type, setType] = useState(null);\n  const [year, setYear] = useState(null);\n  const debounce = (func, delay) => {\n    let timeoutId;\n    return function (...args) {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => func(...args), delay);\n    };\n  };\n  const handleInput = e => {\n    const query = e.target.value;\n    setInput(query);\n    fetchMovies(query);\n  };\n  const fetchMovies = query => {\n    fetch(`http://www.omdbapi.com/?s=${query}&apikey=3244219b`).then(response => response.json()).then(data => {\n      if (data.Search) {\n        const lastFiveMovies = data.Search.slice(-5);\n        setShowName(lastFiveMovies);\n      }\n    });\n  };\n\n  /*fetch(`http://www.omdbapi.com/?t=${showName}&apikey=3244219b`)\r\n      .then(response => response.json())\r\n      .then(data => { console.log(data)\r\n          setTitle(data.Title)\r\n          setPlot(data.Plot)\r\n          setPoster(data.Poster)\r\n          setReleased(data.Released)\r\n          setRuntime(data.Runtime)\r\n          setDirector(data.Director)\r\n          setGenre(data.Genre)\r\n          setWriter(data.Writer)\r\n          setActors(data.Actors)\r\n          setCountry(data.Country)\r\n          setImdbRating(data.imdbRating)\r\n          setType(data.Type)\r\n          setYear(data.Year)\r\n          console.log(\"SHOW NAME: \", showName)\r\n      })*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchField\",\n        type: \"text\",\n        onChange: handleInput,\n        name: \"findMovie\",\n        value: input,\n        placeholder: \"Find a show\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), input ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: showName.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: showName.Runtime ? showName.Runtime.split(' ') : \"null\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: type ? type[0].toUpperCase() + type.slice(1, type.length) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: showName.Poster,\n            width: \"60px\",\n            height: \"80px\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"eRH2rqrfWPYAzXOU3g+ZDecW96Y=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","showName","setShowName","input","setInput","title","setTitle","plot","setPlot","poster","setPoster","released","setReleased","runtime","setRuntime","director","setDirector","genre","setGenre","writer","setWriter","actors","setActors","country","setCountry","imdbRating","setImdbRating","type","setType","year","setYear","debounce","func","delay","timeoutId","args","clearTimeout","setTimeout","handleInput","e","query","target","value","fetchMovies","fetch","then","response","json","data","Search","lastFiveMovies","slice","children","className","onChange","name","placeholder","id","fileName","_jsxFileName","lineNumber","columnNumber","Title","Runtime","split","toUpperCase","length","src","Poster","width","height","alt","_c","$RefreshReg$"],"sources":["C:/Users/Imane/OneDrive/Desktop/CS/Web/movies/front/src/pages/home.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function Home() {\r\n    const [showName, setShowName] = useState(\"\")\r\n    const [input, setInput] = useState(\"\")\r\n    const [title, setTitle] = useState(null)\r\n    const [plot, setPlot] = useState(null)\r\n    const [poster, setPoster] = useState(null)\r\n    const [released, setReleased] = useState(null)\r\n    const [runtime, setRuntime] = useState(null)\r\n    const [director, setDirector] = useState(null)\r\n    const [genre, setGenre] = useState(null)\r\n    const [writer, setWriter] = useState(null)\r\n    const [actors, setActors] = useState(null)\r\n    const [country, setCountry] = useState(null)\r\n    const [imdbRating, setImdbRating] = useState(null)\r\n    const [type, setType] =useState(null)\r\n    const [year, setYear] = useState(null)\r\n\r\n    const debounce = (func, delay) => {\r\n        let timeoutId;\r\n        return function (...args) {\r\n            clearTimeout(timeoutId);\r\n            timeoutId = setTimeout(() => func(...args), delay);\r\n        };\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        const query = e.target.value;\r\n        setInput(query);\r\n        fetchMovies(query);\r\n    }\r\n\r\n    const fetchMovies = (query) => {\r\n        fetch(`http://www.omdbapi.com/?s=${query}&apikey=3244219b`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.Search) {\r\n                    const lastFiveMovies = data.Search.slice(-5);\r\n                    setShowName(lastFiveMovies);\r\n                }\r\n            });\r\n    };\r\n\r\n    /*fetch(`http://www.omdbapi.com/?t=${showName}&apikey=3244219b`)\r\n        .then(response => response.json())\r\n        .then(data => { console.log(data)\r\n            setTitle(data.Title)\r\n            setPlot(data.Plot)\r\n            setPoster(data.Poster)\r\n            setReleased(data.Released)\r\n            setRuntime(data.Runtime)\r\n            setDirector(data.Director)\r\n            setGenre(data.Genre)\r\n            setWriter(data.Writer)\r\n            setActors(data.Actors)\r\n            setCountry(data.Country)\r\n            setImdbRating(data.imdbRating)\r\n            setType(data.Type)\r\n            setYear(data.Year)\r\n            console.log(\"SHOW NAME: \", showName)\r\n        })*/\r\n  return (\r\n    <div>\r\n        <div className=\"movie\">\r\n            <input className='searchField' type=\"text\" onChange={handleInput} name=\"findMovie\" value={input} placeholder='Find a show' id=\"\" />\r\n            {input?\r\n                <div className='scroll'>\r\n                <div className=\"text\">\r\n                    <h4>{showName.Title}</h4>\r\n                    <div className=\"small\">\r\n                        <p>{year}</p>\r\n                        <p>o</p>\r\n                        <p>{showName.Runtime?showName.Runtime.split(' '):\"null\"}</p>\r\n                        <p>o</p>\r\n                        <p>{type? type[0].toUpperCase() + type.slice(1, type.length) : null}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"image\">\r\n                    <img src={showName.Poster} width=\"60px\" height=\"80px\" alt=\"\" />\r\n                </div>\r\n            </div> : null\r\n            }\r\n            \r\n            {/*<div>\r\n                {input?\r\n                    <>\r\n                    <h3>{title}</h3>\r\n                    <p>{type}</p>\r\n                    <p>{released}</p>\r\n                    <p>{runtime}</p>\r\n                    <p>IMDB RATING: {imdbRating}</p>\r\n                    <p>Your Rating</p>\r\n                    <img src={poster} alt=\"\" />\r\n                    <p>{genre}</p>\r\n                    <p>Director: {director}</p>\r\n                    <p>Writes: {writer}</p>\r\n                    <p>Actors: {actors}</p>\r\n                    <p>{plot}</p>\r\n                    <p>Country: {country}</p>\r\n                    </> \r\n                    : null\r\n                }\r\n            </div>*/}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}